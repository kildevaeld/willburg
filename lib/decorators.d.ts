import 'reflect-metadata';
import { MiddlewareFunc } from './interfaces';
import * as joi from 'joi';
export declare const Joi: typeof joi;
export { inject, autoinject } from 'stick.di';
export declare function namespace(path: string, ...middleware: MiddlewareFunc[]): ClassDecorator;
export declare function get(route: string, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function post(route: string, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function put(route: string, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function del(route: string, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function patch(route: string, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function use(path: string | MiddlewareFunc, ...middleware: MiddlewareFunc[]): MethodDecorator;
export declare function controller(name?: string): ClassDecorator;
export declare function service(name?: string): ClassDecorator;
export declare function query(schema: joi.SchemaMap): MethodDecorator;
export declare function body(schema: joi.SchemaMap): MethodDecorator;
